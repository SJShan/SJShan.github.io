[{"title":"游戏美术问题备忘录","url":"/2024/04/13/UE%E7%BE%8E%E6%9C%AF%E9%97%AE%E9%A2%98%E5%A4%87%E5%BF%98%E5%BD%95/","content":"Game Art Cheatsheet游戏艺术备忘单Most common glitches in game art and how to solve them游戏美术中最常见的故障及其解决方法\nTroubleshooting tips for mesh issues, lighting bugs, particles, transparency, physics. The solutions can be applied in Unity, Unreal Engine, Godot and most other game engines.网格问题、光照错误、粒子、透明度、物理问题的故障排除提示。这些解决方案可应用于Unity、Unreal Engine、Godot和大多数其他游戏引擎。\nFind more game dev tutorials at&nbsp;TechArtAid.com查找更多游戏开发教程：&nbsp;TechArtAid.com\nContent Troubleshooting内容疑难解答Geometry几何学\n\n\nName姓名\nSymptom症状\nCause\nSolutions解决方案\n\n\n\n  Aliased lines别名线\nThin geo like cables or fences jitters, disappears  细小的地理物体如同电缆或栅栏一样抖动、消失\nGeometry is thinner than a single pixel几何形状比单个像素更细\n– Make LODs with thicker geo, different texture  – Blend to a solid texture at far distance  – Use a different anti-aliasing algorithm  - 制作具有更厚地理、不同纹理的 LOD  - 在远处混合成坚实的纹理  - 使用不同的抗锯齿算法\n\n\n  Flipped normals翻转法线\nMesh is inverted or partially invisible网格倒置或部分不可见\nBack faces of triangles are hidden by default (backface culling)  三角形的背面默认情况下被隐藏（背面剔除）\n– Flip (reverse) vertex normals to face outside  – If both sides needed, enabled two-sided rendering in material  - 翻转（反向）顶点法线以使其朝向外部  - 如果需要两面，启用材质的双面渲染\n\n\n  Import scale进口规模\nModel is huge or tiny after importing导入后模型过大或过小\nDifferent editors use 1 cm or 1 m as base unit  不同的编辑器使用 1 厘米或 1 米作为基本单位\n-Make sure to follow correct physical dimensions when modelling  – Set import or export scale to 0.01 or 100x  - 建模时确保遵循正确的物理尺寸  – 将导入或导出比例设置为 0.01 或 100x\n\n\n  Temporal anti-aliasing时间抗锯齿\nGhosting. Meshes leave blurry trail when moving  重影。 网格在移动时留下模糊的轨迹\nTemporal smoothing algorithms combine multiple frames over time for high quality  时间平滑算法将多个帧随时间结合，以获得高质量\n– Make sure game keeps good, stable framerate, high resolution  – If using vertex displacement in shader, add motion vectors support  – For stability but lower quality, switch to FXAA anti-aliasing  - 确保游戏保持良好、稳定的帧率、高分辨率  - 如果在着色器中使用顶点位移，请添加运动矢量支持  - 为了稳定但质量较低，请切换到 FXAA 抗锯齿\n\n\n  Z-FightingZ-战斗\nFlickering polygons闪烁的多边形\nMultiple polys have equal Z-depth in the same pixel  同一像素中有多个多边形具有相同的 Z 深度\n– Make sure no polygons overlap on the same plane  – Increase near clip distance in camera  - 确保同一平面上没有多边形重叠  - 增加相机中的近裁剪距离\n\n\n  Split edges分割边缘\nHoles appear in animated mesh动画网格中出现孔洞\nVertices have two modes: shared or split  顶点有两种模式：共享或分割\n– Merge vertices in your 3d software  – Lock vertex normals instead of physically splitting edges  – Use auto smooth groups  – 在 3D 软件中合并顶点  – 锁定顶点法线而不是物理分割边  – 使用自动平滑组\n\n\n  Visibility culling可见性裁剪\nMesh or particle system disappearing from certain positions  从某些位置消失的网格或粒子系统\nFrustum or occlusion culling hides objects by their bounding boxes  通过它们的边界框，视锥体或遮挡剔除隐藏对象\n– Check if occluders (geometry) are correct  – Increase bounding box size  - 检查遮挡物（几何）是否正确  - 增加边界框大小\n\n\nMaterials材料\n\n\nName姓名\nSymptom症状\nCause\nSolutions解决方案\n\n\n\n  Bilinear mipmap filtering双线性mipmap过滤\nBlurry textures at oblique angles倾斜角度的模糊纹理\nBilinear filtering in perspective projection underestimates required mipmap level of a texture  透视投影中的双线性过滤低估了纹理所需的 mipmap 级别\n– Use anisotropic texture filtering, if performance tradeoff is acceptable  - 如果性能折衷可接受，则使用各向异性纹理过滤\n\n\n  sRGB vs linearsRGB 与线性\nTextures are too dark or washed out after import, or roughness is wrong  导入后纹理过暗或褪色，或者粗糙度不正确\nTextures come in (at least) two formats: linear color or sRGB. Linear is used for data, while sRGB for human-readable color  纹理（至少）有两种格式：线性颜色或 sRGB。线性用于数据，sRGB用于人类可读的颜色\n– In texturing programs, export albedo/diffuse as sRGB  – In game engine, enable&nbsp;sRGB&nbsp;in albedo/diffuse textures  – Disable sRGB (use linear) for data (roughness, masks)  – 在纹理程序中，将反照率/漫反射导出为 sRGB  – 在游戏引擎中，启用&nbsp;sRGB&nbsp;在反照率/漫反射纹理中  – 禁用数据（粗糙度、掩模）的 sRGB（使用线性）\n\n\n  Normal Y-axis sign普通 Y 轴符号\nNormal map looks inverted法线贴图看起来颠倒了\nSome engines expect Y+ axis to mean “down”, while others consider it “up”  一些引擎期望 Y+ 轴表示“向下”，而其他引擎则认为它是“向上”\n– Invert green channel of normal map  -In Unreal, tick&nbsp;Flip Green Channel&nbsp;in texture  - 反转法线贴图的绿色通道  - 在虚幻中，勾选&nbsp;翻转绿色通道&nbsp;在纹理中\n\n\n  Aliasing别名\nMoire patterns, bloom flickering云纹图案，绽放闪烁\nResolution is not dense enough to represent (aka sample) the content  分辨率不够密集，无法表示（也称为采样）内容\n– Use smoother patterns in textures  – Add soft radius to light sources  – Blend to smoother texture by distance  – Use different anti-aliasing algorithm  - 在纹理中使用更平滑的图案  - 为光源添加柔和的半径  - 按距离混合到更平滑的纹理  - 使用不同的抗锯齿算法\n\n\n  Alpha bleeding阿尔法出血\nWhite edges in textures with transparency  具有透明度的纹理中的白色边缘\nAlpha compositing阿尔法合成\n– In Substance Painter, use&nbsp;Dilation&nbsp;mode when exporting  -In Photoshop, fill the background by selecting alpha mask, inverting selection and use Fill &gt; Content Aware  – Respect premultiplied alpha in shaders  – 在 Substance Painter 中，使用&nbsp;扩张&nbsp;导出时的模式  -在 Photoshop 中，通过选择 Alpha 蒙版、反转选择并使用“填充”&gt;“内容感知”来填充背景  – 尊重着色器中的预乘 alpha\n\n\n  Hard normals on foliage植被上的硬法线\nFlat shading on foliage models, harshly disconnected from terrain  树叶模型上的平坦阴影，与地形严重脱节\nFoliage mesh, made of big flat planes, is interpreted too literally by lighting  树叶网格，由大块平面制成，被灯光过于字面解释\n– Use manually edited, up-pointing vertex normals  – Read normal from terrain  – 使用手动编辑的、向上的顶点法线  – 从地形读取法线\n\n\n  Negative or NaN color负色或 NaN 颜色\nBlack or deeply saturated squares on screen  屏幕上显示黑色或深度饱和的方块\nPixel’s color value is negative or not a number. This corrupts some algorithms (bloom)  像素的颜色值为负数或不是数字。这会破坏一些算法（bloom）\n– Check for division-by-zero in shaders  – Clamp values to [0,1] in shaders  - 在着色器中检查是否存在除以零的情况  - 在着色器中将数值限制在[0,1]之间\n\n\nEdge bleeding边缘出血\nColors from another island of UV space bleeding into the borders of given one  来自UV空间另一岛屿的颜色渗入给定空间的边界\nBilinear texture filtering picks up information from neighboring texels, as it’s unaware of UV seams or image atlas items  双线性纹理过滤会从相邻的纹理像素中获取信息，因为它不知道UV接缝或图像图集中的项目\n– Increase margins between UV islands  – Add 1 pixel of space between items in tileset/atlas  – In Substance Painter, use&nbsp;Dilation&nbsp;mode when exporting  - 增加 UV 岛之间的边距  - 在贴图集中的项目之间添加 1 个像素的间距  - 在 Substance Painter 中，在导出时使用&nbsp;膨胀&nbsp;模式\n\n\n  Banding in display显示中的条纹\nStepped gradients on screen屏幕上的分层渐变\nTransition between certain colors can’t be represented, due to display’s color precision  由于显示器的颜色精度，某些颜色之间的过渡无法被表示\n– Add some film grain  – Use dithering  – Check if your post-process stack has HDR until very end  - 添加一些胶片颗粒  - 使用抖动  - 检查您的后处理堆栈是否有 HDR 直到最后\n\n\nBanding in textures****纹理中的条纹\nStepped gradients in textures纹理中的阶梯渐变\nLossy compression can’t represent subtle gradient  有损压缩无法表达微妙的渐变\n– Use more contrast in your source textures (e.g. stronger normal map), then reduce it in shader  - 在源纹理中增加更多对比度（例如增强法线贴图），然后在着色器中减少对比度\n\n\nHalf precision半精度\nPixelated procedural materials on mobile  移动设备上的像素化程序材质\nMobile devices optimize some values by storing them in 16 bits instead of 32  移动设备通过将某些值存储为 16 位而不是 32 位来优化一些数值\n– Make your effects less dependent on precision (smooth flow maps, bigger features on texture)  – Use modulo (%, fmod) on final time and UVs  – Force full precision on variable  - 使您的效果减少对精度的依赖（平滑的流程图、纹理上更大的特征）  - 对最终时间和 UV 使用模数 (%, fmod)  - 强制变量达到全精度\n\n\nTransparency透明度\n\n\nName姓名\nSymptom症状\nCause\nSolutions解决方案\n\n\n\n  Bad sorting of polygons多边形排序不良\nTriangles of meshes or particles appear in wrong order  网格或粒子的三角形以错误的顺序出现\nGame engines employ per-object sorting instead of per-triangle, for speed  游戏引擎采用每个对象的排序，而不是每个三角形的排序，以提高速度\n– Split big objects into smaller ones  – Move pivot closer to center of mesh  – Use dithered opacity or cutout alpha for semi-solid objects  – Hack: change draw priority (render queue) of shader  - 将大型对象分割成较小的对象  - 将枢轴移动到网格中心  - 对半固体对象使用抖动不透明度或剪切 Alpha  - Hack：更改着色器的绘制优先级（渲染队列）\n\n\n  Depth of field vs. transparents景深对比透明物体\nTransparent objects are not affected by depth of field透明物体不受景深影响\nDoF reads the depth of the scene to perform blur. Translucent materials don’t write single depth  DoF 读取场景的深度以执行模糊。半透明材质不会写入单一深度\n– Use cutout alpha (masked opacity) instead  – In Unreal, enable Separate Translucency in material- Sometimes you can’t avoid it  - 使用切割alpha（蒙版不透明度）代替  - 在虚幻中，启用材质中的单独半透明 - 有时无法避免\n\n\nLighting灯光\n\n\nName姓名\nSymptom症状\nCause\nSolutions解决方案\n\n\n\n  Lightmap bleeding光照贴图渗透\nDark or wrong mesh edges网格边缘暗或错误\nBilinear filtering picks up information from neighboring texels  双线性过滤从相邻的纹素中获取信息\n– Increase margins between UV islands  – Increase mesh’s lightmap resolution  - 增加 UV 岛之间的边距  - 增加网格的光照贴图分辨率\n\n\n  Shadow acne阴影痤疮\nStepped shadows at certain angles特定角度下的阶梯阴影\nShadow map’s resolution is not enough to represent the continuous surface  阴影贴图的分辨率不足以表示连续表面\n– Play with shadow bias parameter in light’s settings  – Increase shadow map resolution  - 在灯光设置中调整阴影偏差参数  - 增加阴影贴图分辨率\n\n\n  Missing reflection probes缺少反射探头\nBlack reflections on metals金属上的黑色反射\nLack of reflection sources缺乏反射源\n– Make sure at least 1 reflection probe covers every area in the scene  - 确保至少有1个反射探针覆盖场景中的每个区域\n\n\n  Movable SkyLight&nbsp;(UE4)  可移动天窗&nbsp;(UE4)\nBlack reflections on metals金属上的黑色反射\nSkyLight or all reflection probes have&nbsp;Mobility&nbsp;set to&nbsp;Movable  SkyLight 或所有反射探头的&nbsp;移动性&nbsp;都设置为&nbsp;可移动\n– Change their&nbsp;Mobility&nbsp;to&nbsp;Static  – 将他们的&nbsp;移动性&nbsp;改为&nbsp;静态的\n\n\nOverlapping polygons重叠的多边形\nBlack spots in lightmaps光照贴图中的黑点\nMultiple triangles are baked to the same texel  多个三角形被烘烤到相同的纹素\n– Make sure no UV islands overlap  – Remove any overlapping geo in mesh &amp; level  – Check for duplicate objects in level  - 确保没有 UV 岛重叠  - 删除网格和水平中任何重叠的几何  - 检查关卡中是否有重复的对象\n\n\nDynamic lights limit动态灯光限制\nFlickering lights闪烁的灯光\nRenderer reached a limit of light sources affecting the same pixel  渲染器已达到影响同一像素的光源数量上限\n– Reduce # of lights overlapping in that place (change radius, move, delete)  – Use static (baked) lights instead  - 减少该位置重叠的灯光数量（更改半径、移动、删除）  - 使用静态（烘焙）灯光替代\n\n\nAnimation动画\n\n\nName姓名\nSymptom症状\nCause\nSolutions解决方案\n\n\n\nRoot motion根部运动\nCharacter “swims” or drifts far from pivot over time  角色随着时间远离中心点“游动”或漂移\nRoot bone transform in animation is updated to match character movement in game  动画中的根骨骼变换已更新，以匹配游戏中角色的移动\n– Fix the loop, making sure it ends where it started  – Disable root motion  - 修复循环，确保循环结束时回到起点  - 禁用根运动\n\n\nPhysics\n\n\nName姓名\nSymptom症状\nCause\nSolutions解决方案\n\n\n\nTick rate滴答率\nFast objects fly through, skipping collision快速物体飞过，跳过碰撞\nPhysics frame rate was not sufficient for the system to detect collision  物理帧速率不足以让系统检测到碰撞\n– Use thicker collider  – Enable continuous collision detection (CCD)  - 使用更厚的碰撞器  - 启用连续碰撞检测 (CCD)\n\n\nContributing贡献If you want something added or fixed, just&nbsp;add a new issue&nbsp;on GitHub.I welcome&nbsp;pull requests&nbsp;too! (though quality is expected)如果您想要添加或修复某些内容，只需&nbsp;添加新问题&nbsp;在 GitHub 上。我欢迎&nbsp;拉取请求&nbsp;也！ （尽管质量是预期的）\nCredits制作人员Oskar Świerad&nbsp;of&nbsp;Tech Art Aid&nbsp;is the original author and current maintainer.Huge thanks to contibutors of examples from the&nbsp;Unity,&nbsp;Unreal&nbsp;Reddit threads and&nbsp;Twitter.奥斯卡·斯维拉德&nbsp;的&nbsp;科技艺术援助&nbsp;是原作者和当前维护者。非常感谢来自以下示例的贡献者&nbsp;统一,&nbsp;虚幻&nbsp;Reddit 主题和&nbsp;推特.\nLicense许可证Feel free to share, copy, print and modify the document, under the terms of&nbsp;Apache License 2.0.请根据以下条款随意共享、复制、打印和修改该文档&nbsp;阿帕奇许可证 2.0.\n"},{"title":"Hello World","url":"/2024/03/31/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new \"My New Post\"\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","categories":["gallery"],"tags":["landscape"]},{"title":"图片测试","url":"/2024/03/31/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/","content":"\n","categories":["gallery"],"tags":["landscape"]},{"title":"视频测试","url":"/2024/03/31/%E8%A7%86%E9%A2%91%E6%B5%8B%E8%AF%95/","content":"youtube\n\nbilibili \n","categories":["gallery"]}]